# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

logger:

homeassistant:
  customize: !include customize.yaml
  time_zone: Asia/Amman
  unit_system: metric
  name: Home
  latitude: !secret ha_lat
  longitude: !secret ha_long

http:
 server_port : 80

frontend:
  themes: !include_dir_merge_named themes

sun:

device_tracker:
  - platform: luci
    host: !secret luci_host
    username: !secret luci_username
    password: !secret luci_password
    ssl: true
    verify_ssl : false

recorder:
  purge_keep_days: 2
  commit_interval: 15
  exclude:
    domains:
      - automation
      - updater
      - media_player
    event_types:
      - call_service

# https://blog.ceard.tech/2020/05/home-assistant-docker-and-using-ssh.html 
shell_command:
  pi_restart_system: 'ssh -i /config/ssh/id_rsa -o StrictHostKeyChecking=accept-new pi@192.168.0.74 "sudo reboot"'
  cam_copy_latest: "cp -f \"{{folder}}/snapshot_latest.jpg\" \"{{folder}}/snapshot_{{now()}}.jpg\""
  cam_cleanup: "find /media/{{folder}} -type f -name \"*.jpg\" -exec rm {} \\;"
  cam_rm_excess: "/config/rm_excess.sh '{{folder}}'"

ffmpeg:
stream:

camera:
  - platform: local_file
    name: motion_2nd_floor_entrance
    file_path: /media/ipcam_6/snapshot_latest.jpg
  - platform: local_file
    name: motion_1st_floor_entrance
    file_path: /media/ipcam_2/snapshot_latest.jpg
  - platform: local_file
    name: motion_backyard
    file_path: /media/ipcam_5/snapshot_latest.jpg
  - platform: local_file
    name: motion_garage
    file_path: /media/ipcam_4/snapshot_latest.jpg
  - platform: local_file
    name: motion_outdoor_entryway
    file_path: /media/ipcam_7/snapshot_latest.jpg
  - platform: local_file
    name: motion_anooma
    file_path: /media/ipcam_3/snapshot_latest.jpg

switch:
  - platform: command_line
    switches:
      pi: 
        # command_on: # pending living room switch for WOL https://www.home-assistant.io/integrations/wake_on_lan/
        command_off: 'ssh -i /config/ssh/id_rsa -o StrictHostKeyChecking=accept-new pi@192.168.0.74 "sudo shutdown -P now"'
        command_state: 'ping -c 1 -W 1 192.168.0.74 &> /dev/null; echo $?'
        friendly_name: "Living Room Pi"
      pi_camplayer:
        command_on: 'ssh -i /config/ssh/id_rsa -o StrictHostKeyChecking=accept-new pi@192.168.0.74 "sudo systemctl start camplayer"'
        command_off: 'ssh -i /config/ssh/id_rsa -o StrictHostKeyChecking=accept-new pi@192.168.0.74 "sudo systemctl stop camplayer"'
        command_state: 'ssh -i /config/ssh/id_rsa -o StrictHostKeyChecking=accept-new pi@192.168.0.74 "sudo systemctl is-active camplayer"'
        friendly_name: "Pi Camplayer"

binary_sensor:
  - platform: hikvision
    host: 192.168.0.220
    username: !secret hik_user
    password: !secret hik_pass
    customize:
      motion_1:
        delay: 2
      motion_2:
        delay: 2
      motion_3:
        delay: 2
      motion_4:
        delay: 2
      motion_5:
        delay: 2
      motion_6:
        delay: 2
      motion_7:
        delay: 2
      motion_8:
        delay: 2

notify:
  - name: ALL_DEVICES
    platform: group
    services:
      - service: mobile_app_nokia_7_plus
      - service: mobile_app_sm_n950f
      - service: mobile_app_sm_m625f

automation: !include automations.yaml

sensor:
  - platform: uptime
    name: Time Online
  # hp printer sensors
  - platform: snmp
    name: HP Printer Toner Color
    host: 192.168.0.230
    baseoid: 1.3.6.1.2.1.43.12.1.1.4.1.1
    accept_errors: true
    username: !secret snmp_user
    auth_key: !secret snmp_key
    auth_protocol: hmac-sha
    priv_key: !secret snmp_key
    priv_protocol: des
    version: '3'
  - platform: snmp
    name: HP Printer Uptime
    host: 192.168.0.230
    baseoid: 1.3.6.1.2.1.1.3.0
    accept_errors: true
    default_value: '0'
    unit_of_measurement: "minutes"
    value_template: "{{((value | int) / 6000) | int}}"
    username: !secret snmp_user
    auth_key: !secret snmp_key
    auth_protocol: hmac-sha
    priv_key: !secret snmp_key
    priv_protocol: des
    version: '3'
  - platform: snmp
    name: HP Printer Black Capacity
    host: 192.168.0.230
    accept_errors: true
    default_value: '0'
    baseoid: 1.3.6.1.2.1.43.11.1.1.8.1.1
    username: !secret snmp_user
    auth_key: !secret snmp_key
    auth_protocol: hmac-sha
    priv_key: !secret snmp_key
    priv_protocol: des
    version: '3'
  - platform: snmp
    name: HP Printer Black Remaining
    host: 192.168.0.230
    accept_errors: true
    default_value: '0'
    baseoid: 1.3.6.1.2.1.43.11.1.1.9.1.1
    username: !secret snmp_user
    auth_key: !secret snmp_key
    auth_protocol: hmac-sha
    priv_key: !secret snmp_key
    priv_protocol: des
    version: '3'
  - platform: snmp
    name: HP Printer Total Pages Printed
    host: 192.168.0.230
    baseoid: 1.3.6.1.2.1.43.10.2.1.4.1.1
    accept_errors: true
    default_value: '-1'
    unit_of_measurement: "pages"
    username: !secret snmp_user
    auth_key: !secret snmp_key
    auth_protocol: hmac-sha
    priv_key: !secret snmp_key
    priv_protocol: des
    version: '3'
  - platform: snmp
    name: HP Printer Status Code
    host: 192.168.0.230
    baseoid: 1.3.6.1.2.1.25.3.5.1.1.1
    accept_errors: true
    default_value: "Disconnected"
    unit_of_measurement: "pages"
    username: !secret snmp_user
    auth_key: !secret snmp_key
    auth_protocol: hmac-sha
    priv_key: !secret snmp_key
    priv_protocol: des
    version: '3'
  - platform: snmp
    name: HP Printer Error Code
    host: 192.168.0.230
    baseoid: 1.3.6.1.4.1.11.2.3.9.4.2.1.4.1.2.22.0
    accept_errors: true
    default_value: "Disconnected"
    unit_of_measurement: "pages"
    username: !secret snmp_user
    auth_key: !secret snmp_key
    auth_protocol: hmac-sha
    priv_key: !secret snmp_key
    priv_protocol: des
    version: '3'
  - platform: radarr
    host: !secret radarr_host
    port: !secret radarr_port
    api_key: !secret radarr_api_key 
    monitored_conditions:
      - upcoming
      - commands
      - status

template:
  - unique_id: hp_printer
    sensor:
      - unique_id: error
        state: >-
          {% if is_state('sensor.hp_printer_error_code', '0') %}
            Low supply of paper
          {% elif is_state('sensor.hp_printer_error_code', '1') %}
            No paper available
          {% elif is_state('sensor.hp_printer_error_code', '2') %}
            Low supply of toner
          {% elif is_state('sensor.hp_printer_error_code', '3') %}
            No toner available
          {% elif is_state('sensor.hp_printer_error_code', '4') %}
            A door on the printer is open
          {% elif is_state('sensor.hp_printer_error_code', '5') %}
            The printer is jammed
          {% elif is_state('sensor.hp_printer_error_code', '6') %}
            The printer is offline
          {% elif is_state('sensor.hp_printer_error_code', '7') %}
            Technical service is requested for the printer
          {% elif is_state('sensor.hp_printer_error_code', '8') %}
            The input tray is missing or not installed properly
          {% elif is_state('sensor.hp_printer_error_code', '9') %}
            The output tray is missing or not installed properly
          {% elif is_state('sensor.hp_printer_error_code', '10') %}
            The marker supply is missing or not installed properly
          {% elif is_state('sensor.hp_printer_error_code', '11') %}
            The output tray is nearly full
          {% elif is_state('sensor.hp_printer_error_code', '12') %}
            The output tray is full
          {% elif is_state('sensor.hp_printer_error_code', '13') %}
            The input tray is empty
          {% elif is_state('sensor.hp_printer_error_code', '14') %}
            The printer is overdue for preventative maintenance
          {% else %}  
            Unknown
          {% endif %}
      - unique_id: status
        state: >-
          {% if is_state('sensor.hp_printer_status_code', '1') %}
            Other
          {% elif is_state('sensor.hp_printer_status_code', '2') %}
            Unknown
          {% elif is_state('sensor.hp_printer_status_code', '3') %}
            Idle
          {% elif is_state('sensor.hp_printer_status_code', '4') %}
            Printing
          {% elif is_state('sensor.hp_printer_status_code', '5') %}
            Warming Up
          {% else %}  
            Unknown
          {% endif %}
      - unique_id: black_level
        state: "{{ (states('sensor.hp_printer_black_remaining')|float / states('sensor.hp_printer_black_capacity')|float * 100) | round(0) }}"
        unit_of_measurement: '%'
        state_class: measurement
# vacuum:  
#   - platform: eufy_vacuum
# eufy_vacuum:
#   devices:
#     name: RoboVac
#     address: 192.168.0.161
#     access_token: !secret eufy_token
#     id: !secret eufy_id
#     type: T2118
